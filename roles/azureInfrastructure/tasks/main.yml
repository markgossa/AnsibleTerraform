- name: Run terraform init
  command: "terraform init roles/azureInfrastructure/files"

- name: Run terraform apply
  command: "terraform apply
  -state=/var/lib/terraform/terraform-'{{ resourceGroupName }}'.tfstate
  -auto-approve
  -var subscription_id='{{ subscription_id }}' 
  -var client_id='{{ client_id }}'
  -var tenant_id='{{ tenant_id }}'
  -var client_secret='{{ client_secret }}'
  -var resourceGroupName='{{ resourceGroupName }}'
  -var resourceGroupLocation='{{ resourceGroupLocation }}'
  -var storageAccountName='{{ storageAccountName }}'
  -var virtualNetworkName='{{ virtualNetworkName }}'
  -var virtualNetworkAddressSpace='{{ virtualNetworkAddressSpace }}'
  -var virtualNetworkDnsServer1='{{ virtualNetworkDnsServer1 }}'
  -var virtualNetworkDnsServer2='{{ virtualNetworkDnsServer2 }}'
  -var subnetName='{{ subnetName }}'
  -var subnetNetworkID='{{ subnetNetworkID }}'
  -var storageAccountTier='{{ storageAccountTier }}'
  -var storageAccountReplicationType='{{ storageAccountReplicationType }}'
  -var vmSize='{{ vmSize }}'
  -var vmDiskCaching='{{ vmDiskCaching }}'
  -var vmManagedDiskType='{{ vmManagedDiskType }}'
  -var vmUserName='{{ vmUserName }}'
  -var vmPassword='{{ vmPassword }}'
  -var vmSku='{{ vmSku }}'
  -var vmOffer='{{ vmOffer }}'
  -var managementIP='{{ managementIP }}'
  -var dc1Name='{{ hostvars[groups['DomainControllers'][0]]['hostname'] }}'
  -var dc1IPAddress='{{ hostvars[groups['DomainControllers'][0]]['ipAddress'] }}'
  -var dc2Name='{{ hostvars[groups['DomainControllers'][1]]['hostname'] }}'
  -var dc2IPAddress='{{ hostvars[groups['DomainControllers'][1]]['ipAddress'] }}'
  roles/azureInfrastructure/files"
