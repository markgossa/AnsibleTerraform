- hosts: localhost
  gather_facts: no
  tasks:

    - name: Run terraform init
      command: "terraform init ../files"

    - name: Run terraform apply
      command: "terraform apply
      -state=/var/lib/terraform/terraform-'{{ resourceGroupName }}'.tfstate
      -auto-approve
      -var subscription_id='{{ subscription_id }}' 
      -var client_id='{{ client_id }}'
      -var tenant_id='{{ tenant_id }}'
      -var client_secret='{{ client_secret }}'
      -var resourceGroupName='{{ resourceGroupName }}'
      -var resourceGroupLocation='{{ resourceGroupLocation }}'
      -var storageAccountName='{{ storageAccountName }}'
      -var virtualNetworkName='{{ virtualNetworkName }}'
      -var virtualNetworkAddressSpace='{{ virtualNetworkAddressSpace }}'
      -var virtualNetworkDnsServer1='{{ virtualNetworkDnsServer1 }}'
      -var virtualNetworkDnsServer2='{{ virtualNetworkDnsServer2 }}'
      -var subnetName='{{ subnetName }}'
      -var subnetNetworkID='{{ subnetNetworkID }}'
      -var storageAccountTier='{{ storageAccountTier }}'
      -var storageAccountReplicationType='{{ storageAccountReplicationType }}'
      -var dc1Name='{{ dc1Name }}'
      -var dc1IPAddress='{{ dc1IPAddress }}'
      -var dc1Size='{{ dc1Size }}'
      -var dc1DiskCaching='{{ dc1DiskCaching }}'
      -var dc1ManagedDiskType='{{ dc1ManagedDiskType }}'
      -var vmUserName='{{ vmUserName }}'
      -var vmPassword='{{ vmPassword }}'
      -var vmSku='{{ vmSku }}'
      -var vmOffer='{{ vmOffer }}'
      -var managementIP='{{ managementIP }}'
      ../files"

# Domain controller 1 build
- hosts: DomainControllers[0]
  gather_facts: no
  tasks:
    - name: Install PowerShell modules
      win_psmodule:
        name: '{{ item }}'
        state: present
      with_items:
        - xActiveDirectory
        - xComputerManagement
        - xNetworking
        - xDnsServer
        - xActiveDirectory

    - name: Set WinRM service to automatic
      win_dsc:
        resource_name: Service
        Name: WinRM
        StartupType: Automatic

    - name: Install Windows Features
      win_feature:
        name: AD-Domain-Services,RSAT-ADDS-Tools,DNS
        state: present

    - name: Create new domain
      win_dsc:
        resource_name: xADDomain
        DomainName: '{{ domain_name }}'
        SafemodeAdministratorPassword_username: '{{ SafemodeAdministratorPassword_username }}'
        SafemodeAdministratorPassword_password: '{{ SafemodeAdministratorPassword_password }}'
        DomainAdministratorCredential_username: '{{ DomainAdministratorCredential_username }}'
        DomainAdministratorCredential_password: '{{ DomainAdministratorCredential_password }}'
      register: CreateNewDomain

    - name: Restart virtual machine
      azure_rm_virtualmachine:
        resource_group: '{{ resource_group_name }}'
        name: '{{ dc1Name }}'
        restarted: yes
      when: CreateNewDomain.reboot_required == True
      delegate_to: localhost

    - name: Wait for reboot
      wait_for_connection:
        delay: 120
        timeout: 600
      when: CreateNewDomain.reboot_required == True
